# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "thunderbolt" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-partuuid/aa3aeb96-8c53-49d0-b6f6-98a598390f99";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/B44A-9200";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };


  fileSystems."/mnt/mintman" =
    { device = "//hbdltnasdaq.local/mintman";
      fsType = "cifs";
      options = let
        automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";
      in ["${automount_opts},credentials=/etc/nixos/secrets/smb_synology,rw,uid=1000"];
    };


  fileSystems."/mnt/Share" =
    { device = "//hbdltnasdaq.local/Share";
      fsType = "cifs";
      options = let
        automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";
      in ["${automount_opts},credentials=/etc/nixos/secrets/smb_synology,rw,uid=1000"];
    };

  fileSystems."/mnt/Zumgo" =
    { device = "//hbdltnasdaq.local/Zumgo";
      fsType = "cifs";
      options = let
        automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";
      in ["${automount_opts},credentials=/etc/nixos/secrets/smb_synology,rw,uid=1000"];
    };

  fileSystems."/mnt/PD" =
    { device = "//nas-kunlan.local/Personal-Drive";
      fsType = "cifs";
      options = let
        automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";
      in ["${automount_opts},credentials=/etc/nixos/secrets/smb_kunlan,rw,uid=1000"];
    };

  # fileSystems."/mnt/UNAS" =
  #   { device = "//nas-kunlan.lan/";
  #     fsType = "cifs";
  #     options = let
  #       automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";
  #     in ["${automount_opts},credentials=/etc/nixos/secrets/smb_kunlan,rw,uid=1000"];
  #   };

  fileSystems."/mnt/windows" =
    { device = "/dev/disk/by-uuid/01DB8F2FB709A8A0";
      fsType = "ntfs-3g";
      options = [ "rw" "uid=1000"];
    };


  fileSystems."/mnt/dmz" =
    { device = "/dev/disk/by-uuid/413FC4F423B49867";
      fsType = "ntfs-3g";
      options = [ "rw" "uid=1000"];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
